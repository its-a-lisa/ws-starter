// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: imowPa2pNZc39saLUVHnM1
// Component: GyKeDotGN64r

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button2 from "../../Button2"; // plasmic-import: ILffX6Zdb7gh/component

import { useScreenVariants as useScreenVariantsjlwfy8HJyaJ2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: JLWFY8HJyaJ2/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: imowPa2pNZc39saLUVHnM1/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: GyKeDotGN64r/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: y1RTUE0HJ2LI/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: ltI6qU5cz6ka/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: XZqPelFMnqIT/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: bcFgI3mt9cYT/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: jLL77PoxbyOD/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  button?: p.Flex<"button">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjlwfy8HJyaJ2()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__dIdXc)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9UcXt)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___1Qc2N)}
                displayHeight={"40px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"40px"}
                src={{
                  src: "/plasmic/website_starter/images/image.svg",
                  fullWidth: 150,
                  fullHeight: 150,
                  aspectRatio: 1
                }}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ndhJt)}
              >
                <Button2
                  className={classNames("__wab_instance", sty.button2__fa2X8)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__hoDj)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__wAmPn)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__luJox
                    )}
                  >
                    {"Services"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2___29DyT)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__sA6PA)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__xpil7)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kxku3
                    )}
                  >
                    {"Features"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2__g2Ix8)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__kJwk)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__zIxzq)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f3A51
                    )}
                  >
                    {"Company"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2__stkWz)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__azHm)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__mkUkQ)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f1Uwn
                    )}
                  >
                    {"Contact"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2___1G4Nq)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__ve71K)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__v6Y5R)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p9A8Z
                    )}
                  >
                    {"Log in"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2__gjE73)}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg___2JR3C)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__iH32)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oiSHy
                    )}
                  >
                    {"Sign up"}
                  </div>
                </Button2>
              </p.Stack>
              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__o8OoY)}>
                  <button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button
                    )}
                  >
                    {"Sign up"}
                  </button>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__bZBsL)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__x1VlU)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__w0Hgo)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aRsdn
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button2>
                </div>
              ) : null}
            </p.Stack>
            <div className={classNames(projectcss.all, sty.freeBox__zXebs)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__b0TVu)}
              >
                <div className={classNames(projectcss.all, sty.column__g0KTw)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lGWpj)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gPBqN
                      )}
                    >
                      {"Hero"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__amzzt
                      )}
                    >
                      {
                        "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__edYli
                      )}
                    >
                      {
                        "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                      }
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__xOepG
                      )}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__gs8T5)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___1Rog3
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jv7Ka
                        )}
                      >
                        {"Start now ->"}
                      </div>
                    </Button2>
                  </p.Stack>
                </div>
                <div className={classNames(projectcss.all, sty.column__fs5Cz)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bT4Wp)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__vPnT1)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                    />
                  </div>
                </div>
              </p.Stack>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___8Q6U)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__dFtnx)}
              >
                <div className={classNames(projectcss.all, sty.column__adjmP)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___6QTbf)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___1El0F)}
                      displayHeight={"40px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"40px"}
                      src={{
                        src: "/plasmic/website_starter/images/image.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mxtGl)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ieSn
                        )}
                      >
                        {"Connect with us"}
                      </div>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0QwF
                        )}
                      >
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__agxhb)}
                          role={"img"}
                        />

                        <Icon2Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___8YM8O
                          )}
                          role={"img"}
                        />

                        <Icon3Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___74ANo
                          )}
                          role={"img"}
                        />
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>
                <div className={classNames(projectcss.all, sty.column__azlef)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yFCyK)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zw6Vh
                      )}
                    >
                      {"Product"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__zkkb3
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__v6X1K)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7HOoo
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uzZqa
                        )}
                      >
                        {"Pricing"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__yGhCe
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__chIj5)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg___2KlK)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bWSfv
                        )}
                      >
                        {"Log in"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__oUwbD
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__zbiu4)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__oF8Q)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uEpmA
                        )}
                      >
                        {"Integrations"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__ysXnw
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__myrDn)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__iDlFu)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__doEAm
                        )}
                      >
                        {"Insights"}
                      </div>
                    </Button2>
                  </p.Stack>
                </div>
                <div className={classNames(projectcss.all, sty.column___62By5)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___7NZo2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3JD3X
                      )}
                    >
                      {"Support"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__i1N6F
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__gq7Pf)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__sadN1)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__szCcf
                        )}
                      >
                        {"Documentation"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__eMHai
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___0KquZ
                          )}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__tTWsR)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uiDXm
                        )}
                      >
                        {"FAQs"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__wi3B
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___10Kmn
                          )}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__kXweo)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p0194
                        )}
                      >
                        {"Status"}
                      </div>
                    </Button2>
                  </p.Stack>
                </div>
                <div className={classNames(projectcss.all, sty.column__butiG)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fTL7)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sz4G1
                      )}
                    >
                      {"Company"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__bNiho
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7JV4O
                          )}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__bUogh)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mkrhc
                        )}
                      >
                        {"About"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__lqLn4
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__yqtKy)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__zC32)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qgLSt
                        )}
                      >
                        {"Contact us"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__tf7Sc
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__cCme)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__lke3L)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zMsMf
                        )}
                      >
                        {"Careers"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__wu0Ir
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__m2P4)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__qqDxY)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vklxw
                        )}
                      >
                        {"Media"}
                      </div>
                    </Button2>
                  </p.Stack>
                </div>
              </p.Stack>
            </div>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "button"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  button: "button";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
